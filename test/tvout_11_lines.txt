// the first 2 bytes of every row are off screen, design choice to implement screen shake
// PAL_OUTPUT_START can be used fos x axis shake
// 51 bytes every row

#include "RAM.h"
#include "TvLib.h"
#include "spec//asm_macros.h"


#define beginTestClock TCCR0B |=  0b00000001;
#define endTestClock TCCR0B &= 0b11111000;

  void plot(unsigned int x, unsigned int y)
{
   uint8_t data = RAM.read(7, 50*y + x / 8);
   data |= (128 >> (x % 8));
   RAM.write(7, data, 50*y + x / 8);
   return;
}

void drawline(int x0, int y0, int x1, int y1)
{
    int dx, dy, p, x, y;
 
  dx=x1-x0;
  dy=y1-y0;
 
  x=x0;
  y=y0;
 
  p=2*dy-dx;
 
  while(x<x1)
  {
    if(p>=0)
    {
      plot(x,y);
      y=y+1;
      p=p+2*dy-2*dx;
    }
    else
    {
      plot(x,y);
      p=p+2*dy;
    }
    x=x+1;
  }
}
   

  
void test()
{
  uint16_t pos = (line - 30) * 50;
   // select slave by pulling SS low
  PORT_RAM &= ~_BV(7);
  
  SPDR = READ;
  asm volatile("nop");
  while (!(SPSR & _BV(SPIF)));
  // give the addr MSB first
  SPDR = (uint8_t)(pos >> 8);
  asm volatile("nop");
  while (!(SPSR & _BV(SPIF)));
   SPDR = (uint8_t)(pos);
  asm volatile("nop");
  while (!(SPSR & _BV(SPIF)));
  
  wait_until(PAL_OUTPUT_START);
  
  // 50 byte stream
  DDRD |= _BV(6);
  beginTestClock
  __asm__ __volatile__ ("delayRenderTime\n"); 
 
  //endTestClock
  DDRD &= ~_BV(6);
      
  // signal end transmittion by pulling ss low
  PORT_RAM |= _BV(7);
}

void setup() 
{
  TV.start(); // must be at the beginning
  
  // reset register
  // DO NOT TOUCH THIS STUPID MORON!
  // THIS ISN'T FOR LINE TESTING BITCH!
  TCCR0A = 0b01000011;
  TCCR0B = 0b00001000;
  OCR0A = 0;
  
  RAM.add(7, BYTE_MODE);
  for(unsigned int j = 0; j < 290; j++)
    for(unsigned int i = 0; i < 50; i++)
        RAM.write(7, 0, 50*j + i);

  drawline(21, 22, 100,45);
   drawline(40, 60, 120,123);
    drawline(0, 0, 200,200);

  RAM.writeSr(7, SEQ_MODE);
  TV.setRender(test);
}

void loop() 
{

}