#include "RAM.h"
#include "TvLib.h"

#define beginTestClock TCCR0B |=  0b00000001;
#define endTestClock TCCR0B &= 0b11111000;

void test()
{
  wait_until(162);
  PORT_RAM &= ~_BV(7);

      SPDR = READ;
  asm volatile("nop");
  while (!(SPSR & _BV(SPIF)));

  // give the addr MSB first
  SPDR = 0;
  asm volatile("nop");
  while (!(SPSR & _BV(SPIF)));
  SPDR = 0;
  asm volatile("nop");
  while (!(SPSR & _BV(SPIF)));
       
      DDRD |= _BV(6);
      
      //beginTestClock
      asm volatile("nop");
      asm volatile("nop");
      asm volatile("nop");
      asm volatile("nop");
      asm volatile("nop");
      asm volatile("nop");
      asm volatile("nop");
      asm volatile("nop");
      asm volatile("nop");
      asm volatile("nop");
      asm volatile("nop");
      //endTestClock
      DDRD &= ~_BV(6);
         
      
   // signal end transmittion by pulling ss low
   PORT_RAM |= _BV(7);
}

void setup() 
{
  DDRD |= _BV(6);
  // reset register
  
  TCCR0A = 0b01000011;
  TCCR0B = 0b00001000;
  OCR0A = 0;
  beginTestClock;
  RAM.add(7, SEQ_MODE);
  RAM.write(7, 0b10101011, 0);
  RAM.write(7, 0b01111111, 1);
  //RAM.writeSr(7, SEQ_MODE);
  TV.start();
  TV.setRender(test);
}

void loop() 
{

}